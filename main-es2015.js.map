{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/chatbot/chatbot.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/chatbot/chatbot.component.scss","./src/app/chatbot/chatbot.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nb-layout>\\n\\n  <nb-layout-column>\\n\\n    <app-chatbot></app-chatbot>\\n    \\n  </nb-layout-column>\\n\\n</nb-layout>\\n\"","module.exports = \"<nb-chat title=\\\"Beats survey\\\">\\n\\n    <nb-chat-message *ngFor=\\\"let msg of messages\\\"\\n                     type=\\\"text\\\"\\n                     [message]=\\\"msg.text\\\"\\n                     [reply]=\\\"msg.reply\\\"\\n                     [sender]=\\\"msg.sender\\\"\\n                     [date]=\\\"msg.date\\\"\\n                     [avatar]=\\\"msg.avatar\\\">\\n    </nb-chat-message>\\n\\n\\n    <nb-chat-message *ngIf=\\\"loading\\\" [nbSpinner]=\\\"loading\\\" nbSpinnerStatus=\\\"info\\\"\\n        type=\\\"text\\\"\\n        avatar=\\\"assets/kiava.png\\\"\\n        message=\\\"...\\\">\\n\\n    </nb-chat-message>\\n\\n\\n    <nb-chat-form (send)=\\\"handleUserMessage($event)\\\"></nb-chat-form>\\n\\n</nb-chat>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbThemeModule, NbLayoutModule, NbChatModule, NbSpinnerModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { ChatbotComponent } from './chatbot/chatbot.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatbotComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NbThemeModule.forRoot({ name: 'default' }),\n    NbLayoutModule,\n    NbEvaIconsModule,\n    NbChatModule,\n    NbSpinnerModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXRib3QvY2hhdGJvdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst dialogflowURL = 'https://us-central1-fireship-lessons.cloudfunctions.net/dialogflowGateway';\n\n@Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.scss']\n})\nexport class ChatbotComponent implements OnInit {\n\n  messages = [];\n  loading = false;\n\n  // Random ID to maintain session with server\n  sessionId = Math.random().toString(36).slice(-5);\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.addBotMessage('Hi this is kiava! ready for the survey?');\n  }\n\n  handleUserMessage(event) {\n    console.log(event);\n    const text = event.message;\n    this.addUserMessage(text);\n\n    this.loading = true;\n\n    // Make an HTTP Request\n    this.http.post<any>(\n      dialogflowURL,\n      {\n        sessionId: this.sessionId,\n        queryInput: {\n          // event: {\n          //   name: 'USER_ONBOARDING',\n          //   languageCode: 'en-US'\n          // },\n          text: {\n            text,\n            languageCode: 'en-US'\n          }\n        }\n      }\n    )\n    .subscribe(res => {\n      this.addBotMessage(res.fulfillmentText);\n      this.loading = false;\n    });\n  }\n\n\n  // Helpers\n\n  addUserMessage(text) {\n    this.messages.push({\n      text,\n      sender: 'You',\n      reply: true,\n      date: new Date()\n    });\n  }\n\n  addBotMessage(text) {\n    this.messages.push({\n      text,\n      sender: 'Bot',\n      avatar: '/assets/kiava.png',\n      date: new Date()\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}